void bubbleSort(int arr[], int n) {int it = 0;bool swapped = true;while (it < n - 1 && swapped) {swapped = false;for (int i = 0; i < n - 1 - it; i++) {if (arr[i] > arr[i + 1]) {swap(arr, i, i + 1);swapped = true;}}it++;}}
void insertionSort(int arr[], int n) {int current;int otherIndex;for (int i = 1; i < n; i++) {current = arr[i];otherIndex = i;while (otherIndex > 0 && current < arr[otherIndex - 1]) {arr[otherIndex] = arr[otherIndex - 1];otherIndex--;}arr[otherIndex] = current;}}
void selectSort(int arr[], int n) {int minIndex;for (int i = 0; i < n - 1; i++) {minIndex = i;for (int j = i + 1; j < n; j++) {if (arr[j] < arr[minIndex]) {minIndex = j;}}if (minIndex != i) {swap(arr, i, minIndex);}}}
double determinant2x2(double a, double b, double c, double d) {return a * d - b * c;}
double determinant3x3(double mat[3][3]) {double det = 0;for (int i = 0; i < 3; i++) {det += mat[0][i] * determinant2x2(mat[1][(i + 1) % 3], mat[1][(i + 2) % 3], mat[2][(i + 1) % 3], mat[2][(i + 2) % 3]);}return det;}
double determinant4x4(double mat[4][4]) {double det = 0;for (int i = 0; i < 4; i++) {double minorMatrix[3][3];for (int j = 1; j < 4; j++) {int col = 0;for (int k = 0; k < 4; k++) {if (k != i) {minorMatrix[j - 1][col] = mat[j][k];col++;}}}double minorDet = determinant3x3(minorMatrix);det += (i % 2 == 0 ? 1 : -1) * mat[0][i] * minorDet;}return det;}
